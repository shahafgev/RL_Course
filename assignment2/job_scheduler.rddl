domain job_scheduler {
  types {
    job : object;
  }

  pvariables {
    job_done(job) : { bool, default = false };
    select(job) : { action-fluent, bool, default = false };
    reward : real;
  }

  cpfs {
    job_done(j) = if (job_done(j)) then true
                  else select(j) ? Bern(mu(j)) : job_done(j);

    reward = -sum_{j : job} (if (!job_done(j)) then cost(j) else 0.0);
  }

  non-fluents {
    mu(job) : real;
    cost(job) : real;
  }

  action-preconditions {
    // Can only select one job per time step
    sum_{j : job} select(j) <= 1;
  }

  state-invariants {
    // Nothing extra
  }

  terminal = forall_{j : job} job_done(j);
}